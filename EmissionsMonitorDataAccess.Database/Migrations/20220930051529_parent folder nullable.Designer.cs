// <auto-generated />
using System;
using EmissionsMonitorDataAccess.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmissionsMonitorDataAccess.Database.Migrations
{
    [DbContext(typeof(EmissionsMonitorContext))]
    [Migration("20220930051529_parent folder nullable")]
    partial class parentfoldernullable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EmissionsMonitorModel.DataSources.DataSourceBase", b =>
                {
                    b.Property<int>("SourceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SourceId"), 1L, 1);

                    b.Property<string>("SourceDetailsJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SourceType")
                        .HasColumnType("int");

                    b.HasKey("SourceId");

                    b.ToTable("DATA_SOURCE", (string)null);
                });

            modelBuilder.Entity("EmissionsMonitorModel.VirtualFileSystem.FileSystem", b =>
                {
                    b.Property<int>("FileSystemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FileSystemId"), 1L, 1);

                    b.Property<string>("FileSystemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FileSystemId");

                    b.ToTable("FILE_SYSTEM", (string)null);
                });

            modelBuilder.Entity("EmissionsMonitorModel.VirtualFileSystem.Folder", b =>
                {
                    b.Property<int>("FolderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FolderId"), 1L, 1);

                    b.Property<string>("FolderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OwningFileSystemId")
                        .HasColumnType("int");

                    b.Property<int?>("ParentFolderId")
                        .HasColumnType("int");

                    b.HasKey("FolderId");

                    b.HasIndex("OwningFileSystemId");

                    b.HasIndex("ParentFolderId");

                    b.ToTable("FOLDER", (string)null);
                });

            modelBuilder.Entity("EmissionsMonitorModel.VirtualFileSystem.SaveItem", b =>
                {
                    b.Property<int>("SaveItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SaveItemId"), 1L, 1);

                    b.Property<int>("FileSystemId")
                        .HasColumnType("int");

                    b.Property<int>("FolderId")
                        .HasColumnType("int");

                    b.HasKey("SaveItemId");

                    b.HasIndex("FileSystemId");

                    b.HasIndex("FolderId");

                    b.ToTable("SaveItems");
                });

            modelBuilder.Entity("EmissionsMonitorModel.VirtualFileSystem.Folder", b =>
                {
                    b.HasOne("EmissionsMonitorModel.VirtualFileSystem.FileSystem", "FileSystem")
                        .WithMany("Folders")
                        .HasForeignKey("OwningFileSystemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EmissionsMonitorModel.VirtualFileSystem.Folder", "ParentFolder")
                        .WithMany("Folders")
                        .HasForeignKey("ParentFolderId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("FileSystem");

                    b.Navigation("ParentFolder");
                });

            modelBuilder.Entity("EmissionsMonitorModel.VirtualFileSystem.SaveItem", b =>
                {
                    b.HasOne("EmissionsMonitorModel.VirtualFileSystem.FileSystem", null)
                        .WithMany("SaveItems")
                        .HasForeignKey("FileSystemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmissionsMonitorModel.VirtualFileSystem.Folder", null)
                        .WithMany("SaveItems")
                        .HasForeignKey("FolderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EmissionsMonitorModel.VirtualFileSystem.FileSystem", b =>
                {
                    b.Navigation("Folders");

                    b.Navigation("SaveItems");
                });

            modelBuilder.Entity("EmissionsMonitorModel.VirtualFileSystem.Folder", b =>
                {
                    b.Navigation("Folders");

                    b.Navigation("SaveItems");
                });
#pragma warning restore 612, 618
        }
    }
}
