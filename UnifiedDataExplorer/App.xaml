<Application x:Class="UnifiedDataExplorer.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:UnifiedDataExplorer"
             xmlns:converters="clr-namespace:UnifiedDataExplorer.Converters"
             xmlns:datasourcemodel="clr-namespace:EmissionsMonitorModel.DataSources;assembly=EmissionsMonitorModel"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:system="clr-namespace:System;assembly=System.Runtime"
             Startup="Application_Startup"
             DispatcherUnhandledException="Application_DispatcherUnhandledException">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <materialDesign:BundledTheme BaseTheme="Light" PrimaryColor="BlueGrey" SecondaryColor="Amber" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <system:Boolean x:Key="FalseValue">False</system:Boolean>
            <system:Boolean x:Key="TrueValue">True</system:Boolean>

            <!--CONVERTERS-->
            <converters:DataSourceTypeToResourceIcon x:Key="DataSourceTypeToIconPath"/>
            <converters:BoolToFolderIcon x:Key="BoolToFolderIconString"/>
            <BooleanToVisibilityConverter x:Key="BoolToVisibility"/>
            <!--END CONVERTERS-->

            <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" x:Key="DataGridColumnHeaderStyle"/>
            <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource MaterialDesignDataGridCell}" x:Key="DataGridCellStyle"/>
            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignRaisedButton}" x:Key="Button"> 
                <Setter Property="Background" Value="Transparent"/>
            </Style>
            <Style TargetType="{x:Type TreeView}" BasedOn="{StaticResource MaterialDesignTreeView}" x:Key="TreeView"/>
            <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource MaterialDesignTreeViewItem}" x:Key="TreeViewItem">
                <Setter Property="Margin" Value="0"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="materialDesign:RippleAssist.IsDisabled" Value="True"/>
            </Style>
            <Style TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource MaterialDesignScrollViewer}" x:Key="ScrollViewer"/>
            <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource MaterialDesignScrollBarMinimal}" x:Key="ScrollBar"/>
            <Style TargetType="{x:Type Thumb}" BasedOn="{StaticResource MaterialDesignScrollBarThumb}" x:Key="Thumb"/>
            <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource MaterialDesignMenuItem}" x:Key="MenuItem"/>
            <!--<Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource MaterialDesignActionToggleButton}" x:Key="ToggleButton"/>-->

            <Style TargetType="TextBox" BasedOn="{StaticResource MaterialDesignTextBox}">
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="True">
                        <Setter Property="BorderBrush" Value="Red"/>
                        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type Label}" BasedOn="{StaticResource MaterialDesignLabel}">
                <Style.Setters>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="FontSize" Value="14"/>
                </Style.Setters>
            </Style>


            <!--DYNAMIC DATAGRID-->
            <Style x:Key="DataGridHeaderStyle" TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource DataGridColumnHeaderStyle}">
                <Setter Property="Padding" Value="3 2 2 2"/>
                <Setter Property="Margin" Value="0 0 0 0"/>
                <Setter Property="BorderBrush" Value="Gray"/>
                <Setter Property="BorderThickness" Value="0 0 1 2"/>
                <Setter Property="Background" Value="#E8E6E6"/>
            </Style>

            <Style x:Key="CustomDataGridCellStyle" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource DataGridCellStyle}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                            <Border Name="DataGridCellBorder" SnapsToDevicePixels="True">
                                <ContentControl Content="{TemplateBinding Content}">
                                    <ContentControl.ContentTemplate>
                                        <DataTemplate>
                                            <TextBox Background="Transparent" TextWrapping="WrapWithOverflow" IsReadOnly="True" BorderThickness="0"
                                                     Height="Auto" Width="Auto" Padding="3 0 2 0" Text="{Binding Text}" SnapsToDevicePixels="True"/>
                                        </DataTemplate>
                                    </ContentControl.ContentTemplate>
                                </ContentControl>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--END DYNAMIC DATAGRID-->

            <!--OTHER TEMPLATES-->
            <DataTemplate x:Key="DataSourceListItemTemplate" DataType="{x:Type datasourcemodel:DataSourceBase}">
                <StackPanel Orientation="Horizontal">
                    <Image Height="25" Width="50" Source="{Binding SourceType, Converter={StaticResource DataSourceTypeToIconPath}}" />
                    <TextBlock Text="{Binding SourceName}"/>
                </StackPanel>
            </DataTemplate>
            <!--END OTHER TEMPLATES-->
        </ResourceDictionary>
    </Application.Resources>
</Application>
